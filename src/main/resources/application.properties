# database
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost/proposta?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSl=true}
spring.datasource.username=${DATABASE_USER:root}
spring.datasource.password=${DATABASE_PASSWORD:diasz}

# JPA
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=false
spring.jpa.properties.format_sql=true
spring.jpa.hibernate.ddl-auto=create-drop 

# dominio
analises.host=${ANALISES_URL:http://localhost:9999/api/solicitacao}
cartoes.host=${CARTOES_URL:http://localhost:8888/api/cartoes}
periodicidade.executa-operacao=${PERIODICIDADE_NUMERO_CARTAO:10000}
proposta.ofuscar.dados=${PASSWORD:pass}

# actuator
management.endpoints.web.exposure.include=health,metrics,prometheus, info
management.endpoints.web.exposure.exclude=env,beans
management.endpoints.prometheus.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoints.prometheus.enabled=true

# debug security
logging.level.org.springframework.security=DEBUG

## oauth2/keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# métricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:proposta}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}